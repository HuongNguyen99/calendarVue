{"remainingRequest":"D:\\Test function\\calendarVue\\node_modules\\vue-loader\\lib\\index.js??vue-loader-options!D:\\Test function\\calendarVue\\src\\components\\CalendarMonth.vue?vue&type=style&index=0&id=2a57d0e2&scoped=true&lang=css&","dependencies":[{"path":"D:\\Test function\\calendarVue\\src\\components\\CalendarMonth.vue","mtime":1620925107513},{"path":"D:\\Test function\\calendarVue\\node_modules\\css-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Test function\\calendarVue\\node_modules\\vue-loader\\lib\\loaders\\stylePostLoader.js","mtime":499162500000},{"path":"D:\\Test function\\calendarVue\\node_modules\\postcss-loader\\src\\index.js","mtime":499162500000},{"path":"D:\\Test function\\calendarVue\\node_modules\\cache-loader\\dist\\cjs.js","mtime":499162500000},{"path":"D:\\Test function\\calendarVue\\node_modules\\vue-loader\\lib\\index.js","mtime":499162500000}],"contextDependencies":[],"result":[{"type":"Buffer","data":"base64:CgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCgoKCg0KLmNhbGVuZGFyLW1vbnRoIHsNCiAgcG9zaXRpb246IHJlbGF0aXZlOw0KICBiYWNrZ3JvdW5kLWNvbG9yOiB2YXIoLS1ncmV5LTIwMCk7DQogIGJvcmRlcjogc29saWQgMXB4IHZhcigtLWdyZXktMzAwKTsNCn0NCg0KLmRheS1vZi13ZWVrIHsNCiAgY29sb3I6IHZhcigtLWdyZXktODAwKTsNCiAgZm9udC1zaXplOiAxOHB4Ow0KICBiYWNrZ3JvdW5kLWNvbG9yOiAjZmZmOw0KICBwYWRkaW5nLWJvdHRvbTogNXB4Ow0KICBwYWRkaW5nLXRvcDogMTBweDsNCn0NCg0KLmRheS1vZi13ZWVrLA0KLmRheXMtZ3JpZCB7DQogIGRpc3BsYXk6IGdyaWQ7DQogIGdyaWQtdGVtcGxhdGUtY29sdW1uczogcmVwZWF0KDcsIDFmcik7DQp9DQoNCi5kYXktb2Ytd2VlayA+ICogew0KICB0ZXh0LWFsaWduOiByaWdodDsNCiAgcGFkZGluZy1yaWdodDogNXB4Ow0KfQ0KDQouZGF5cy1ncmlkIHsNCiAgaGVpZ2h0OiAxMDAlOw0KICBwb3NpdGlvbjogcmVsYXRpdmU7DQogIGdyaWQtY29sdW1uLWdhcDogdmFyKC0tZ3JpZC1nYXApOw0KICBncmlkLXJvdy1nYXA6IHZhcigtLWdyaWQtZ2FwKTsNCiAgYm9yZGVyLXRvcDogc29saWQgMXB4IHZhcigtLWdyZXktMjAwKTsNCn0NCg=="},{"version":3,"sources":["CalendarMonth.vue"],"names":[],"mappings":";;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAoKA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;;AAEA;AACA;AACA;AACA;AACA;AACA;AACA","file":"CalendarMonth.vue","sourceRoot":"src/components","sourcesContent":["<template>\r\n  <div class=\"calendar-month\">\r\n    <div class=\"calendar-month-header\">\r\n      <CalendarDateIndicator\r\n        :selected-date=\"selectedDate\"\r\n        class=\"calendar-month-header-selected-month\"\r\n      />\r\n\r\n      <CalendarDateSelector\r\n        :current-date=\"today\"\r\n        :selected-date=\"selectedDate\"\r\n        @dateSelected=\"selectDate\"\r\n      />\r\n    </div>\r\n\r\n    <ol class=\"day-of-week\">\r\n      <li v-for=\"weekday in weekdays\" :key=\"weekday\">{{ weekday }}</li>\r\n    </ol>\r\n\r\n    <ol class=\"days-grid\">\r\n      <CalendarMonthDayItem\r\n        v-for=\"day in days\"\r\n        :key=\"day.date\"\r\n        :day=\"day\"\r\n        :is-today=\"day.date === today\"\r\n        :is-current-month=\"day.isCurrentMonth\"\r\n      />\r\n    </ol>\r\n  </div>\r\n</template>\r\n\r\n<script>\r\nimport dayjs from \"dayjs\";\r\nimport weekday from \"dayjs/plugin/weekday\";\r\nimport weekOfYear from \"dayjs/plugin/weekOfYear\";\r\nimport CalendarMonthDayItem from \"./CalendarMonthDayItem\";\r\nimport CalendarDateIndicator from \"./CalendarDateIndicator\";\r\nimport CalendarDateSelector from \"./CalendarDateSelector\";\r\n\r\ndayjs.extend(weekday);\r\ndayjs.extend(weekOfYear);\r\n\r\nconst WEEKDAYS = [\"Mon\", \"Tue\", \"Wed\", \"Thu\", \"Fri\", \"Sat\", \"Sun\"];\r\n\r\nexport default {\r\n  name: \"CalendarMonth\",\r\n\r\n  components: {\r\n    CalendarMonthDayItem,\r\n    CalendarDateIndicator,\r\n    CalendarDateSelector\r\n  },\r\n\r\n  data() {\r\n    return {\r\n      selectedDate: dayjs(),\r\n      today: dayjs().format(\"YYYY-MM-DD\"),\r\n      weekdays: WEEKDAYS\r\n    };\r\n  },\r\n\r\n  computed: {\r\n    days() {\r\n      return [\r\n        ...this.previousMonthDays,\r\n        ...this.currentMonthDays,\r\n        ...this.nextMonthDays\r\n      ];\r\n    },\r\n\r\n    month() {\r\n      return Number(this.selectedDate.format(\"M\"));\r\n    },\r\n\r\n    year() {\r\n      return Number(this.selectedDate.format(\"YYYY\"));\r\n    },\r\n\r\n    numberOfDaysInMonth() {\r\n      return dayjs(`${this.year}-${this.month}-01`).daysInMonth();\r\n    },\r\n\r\n    currentMonthDays() {\r\n      return [...Array(this.numberOfDaysInMonth)].map((day, index) => {\r\n        return {\r\n          date: dayjs(`${this.year}-${this.month}-${index + 1}`).format(\r\n            \"YYYY-MM-DD\"\r\n          ),\r\n          dayOfMonth: index + 1,\r\n          isCurrentMonth: true\r\n        };\r\n      });\r\n    },\r\n\r\n    previousMonthDays() {\r\n      const firstDayOfTheMonthWeekday = this.getWeekday(\r\n        this.currentMonthDays[0].date\r\n      );\r\n      const previousMonth = dayjs(`${this.year}-${this.month}-01`).subtract(\r\n        1,\r\n        \"month\"\r\n      );\r\n\r\n      const previousMonthLastMondayDayOfMonth = dayjs(\r\n        this.currentMonthDays[0].date\r\n      )\r\n        .subtract(firstDayOfTheMonthWeekday - 1, \"day\")\r\n        .date();\r\n\r\n      // Cover first day of the month being sunday (firstDayOfTheMonthWeekday === 0)\r\n      const visibleNumberOfDaysFromPreviousMonth = firstDayOfTheMonthWeekday\r\n        ? firstDayOfTheMonthWeekday - 1\r\n        : 6;\r\n\r\n      return [...Array(visibleNumberOfDaysFromPreviousMonth)].map(\r\n        (day, index) => {\r\n          return {\r\n            date: dayjs(\r\n              `${previousMonth.year()}-${previousMonth.month() +\r\n                1}-${previousMonthLastMondayDayOfMonth + index}`\r\n            ).format(\"YYYY-MM-DD\"),\r\n            dayOfMonth: previousMonthLastMondayDayOfMonth + index,\r\n            isCurrentMonth: false\r\n          };\r\n        }\r\n      );\r\n    },\r\n\r\n    nextMonthDays() {\r\n      const lastDayOfTheMonthWeekday = this.getWeekday(\r\n        `${this.year}-${this.month}-${this.currentMonthDays.length}`\r\n      );\r\n\r\n      const nextMonth = dayjs(`${this.year}-${this.month}-01`).add(1, \"month\");\r\n\r\n      const visibleNumberOfDaysFromNextMonth = lastDayOfTheMonthWeekday\r\n        ? 7 - lastDayOfTheMonthWeekday\r\n        : lastDayOfTheMonthWeekday;\r\n\r\n      return [...Array(visibleNumberOfDaysFromNextMonth)].map((day, index) => {\r\n        return {\r\n          date: dayjs(\r\n            `${nextMonth.year()}-${nextMonth.month() + 1}-${index + 1}`\r\n          ).format(\"YYYY-MM-DD\"),\r\n          dayOfMonth: index + 1,\r\n          isCurrentMonth: false\r\n        };\r\n      });\r\n    }\r\n  },\r\n\r\n  methods: {\r\n    getWeekday(date) {\r\n      return dayjs(date).weekday();\r\n    },\r\n\r\n    selectDate(newSelectedDate) {\r\n      this.selectedDate = newSelectedDate;\r\n    }\r\n  }\r\n};\r\n</script>\r\n\r\n<style scoped>\r\n.calendar-month {\r\n  position: relative;\r\n  background-color: var(--grey-200);\r\n  border: solid 1px var(--grey-300);\r\n}\r\n\r\n.day-of-week {\r\n  color: var(--grey-800);\r\n  font-size: 18px;\r\n  background-color: #fff;\r\n  padding-bottom: 5px;\r\n  padding-top: 10px;\r\n}\r\n\r\n.day-of-week,\r\n.days-grid {\r\n  display: grid;\r\n  grid-template-columns: repeat(7, 1fr);\r\n}\r\n\r\n.day-of-week > * {\r\n  text-align: right;\r\n  padding-right: 5px;\r\n}\r\n\r\n.days-grid {\r\n  height: 100%;\r\n  position: relative;\r\n  grid-column-gap: var(--grid-gap);\r\n  grid-row-gap: var(--grid-gap);\r\n  border-top: solid 1px var(--grey-200);\r\n}\r\n</style>\r\n"]}]}